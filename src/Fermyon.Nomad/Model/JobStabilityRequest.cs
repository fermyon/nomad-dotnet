/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Fermyon.Nomad.Client.OpenAPIDateConverter;

namespace Fermyon.Nomad.Model
{
    /// <summary>
    /// JobStabilityRequest
    /// </summary>
    [DataContract(Name = "JobStabilityRequest")]
    public partial class JobStabilityRequest : IEquatable<JobStabilityRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="JobStabilityRequest" /> class.
        /// </summary>
        /// <param name="jobID">jobID.</param>
        /// <param name="jobVersion">jobVersion.</param>
        /// <param name="varNamespace">varNamespace.</param>
        /// <param name="region">region.</param>
        /// <param name="secretID">secretID.</param>
        /// <param name="stable">stable.</param>
        public JobStabilityRequest(string jobID = default(string), int jobVersion = default(int), string varNamespace = default(string), string region = default(string), string secretID = default(string), bool stable = default(bool))
        {
            this.JobID = jobID;
            this.JobVersion = jobVersion;
            this.VarNamespace = varNamespace;
            this.Region = region;
            this.SecretID = secretID;
            this.Stable = stable;
        }

        /// <summary>
        /// Gets or Sets JobID
        /// </summary>
        [DataMember(Name = "JobID", EmitDefaultValue = false)]
        public string JobID { get; set; }

        /// <summary>
        /// Gets or Sets JobVersion
        /// </summary>
        [DataMember(Name = "JobVersion", EmitDefaultValue = false)]
        public int JobVersion { get; set; }

        /// <summary>
        /// Gets or Sets VarNamespace
        /// </summary>
        [DataMember(Name = "Namespace", EmitDefaultValue = false)]
        public string VarNamespace { get; set; }

        /// <summary>
        /// Gets or Sets Region
        /// </summary>
        [DataMember(Name = "Region", EmitDefaultValue = false)]
        public string Region { get; set; }

        /// <summary>
        /// Gets or Sets SecretID
        /// </summary>
        [DataMember(Name = "SecretID", EmitDefaultValue = false)]
        public string SecretID { get; set; }

        /// <summary>
        /// Gets or Sets Stable
        /// </summary>
        [DataMember(Name = "Stable", EmitDefaultValue = true)]
        public bool Stable { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class JobStabilityRequest {\n");
            sb.Append("  JobID: ").Append(JobID).Append("\n");
            sb.Append("  JobVersion: ").Append(JobVersion).Append("\n");
            sb.Append("  VarNamespace: ").Append(VarNamespace).Append("\n");
            sb.Append("  Region: ").Append(Region).Append("\n");
            sb.Append("  SecretID: ").Append(SecretID).Append("\n");
            sb.Append("  Stable: ").Append(Stable).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as JobStabilityRequest);
        }

        /// <summary>
        /// Returns true if JobStabilityRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of JobStabilityRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(JobStabilityRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.JobID == input.JobID ||
                    (this.JobID != null &&
                    this.JobID.Equals(input.JobID))
                ) && 
                (
                    this.JobVersion == input.JobVersion ||
                    this.JobVersion.Equals(input.JobVersion)
                ) && 
                (
                    this.VarNamespace == input.VarNamespace ||
                    (this.VarNamespace != null &&
                    this.VarNamespace.Equals(input.VarNamespace))
                ) && 
                (
                    this.Region == input.Region ||
                    (this.Region != null &&
                    this.Region.Equals(input.Region))
                ) && 
                (
                    this.SecretID == input.SecretID ||
                    (this.SecretID != null &&
                    this.SecretID.Equals(input.SecretID))
                ) && 
                (
                    this.Stable == input.Stable ||
                    this.Stable.Equals(input.Stable)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.JobID != null)
                {
                    hashCode = (hashCode * 59) + this.JobID.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.JobVersion.GetHashCode();
                if (this.VarNamespace != null)
                {
                    hashCode = (hashCode * 59) + this.VarNamespace.GetHashCode();
                }
                if (this.Region != null)
                {
                    hashCode = (hashCode * 59) + this.Region.GetHashCode();
                }
                if (this.SecretID != null)
                {
                    hashCode = (hashCode * 59) + this.SecretID.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Stable.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // JobVersion (int) maximum
            if (this.JobVersion > (int)384)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for JobVersion, must be a value less than or equal to 384.", new [] { "JobVersion" });
            }

            // JobVersion (int) minimum
            if (this.JobVersion < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for JobVersion, must be a value greater than or equal to 0.", new [] { "JobVersion" });
            }

            yield break;
        }
    }

}
