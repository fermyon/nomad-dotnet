/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Fermyon.Nomad.Client.OpenAPIDateConverter;

namespace Fermyon.Nomad.Model
{
    /// <summary>
    /// QuotaLimit
    /// </summary>
    [DataContract(Name = "QuotaLimit")]
    public partial class QuotaLimit : IEquatable<QuotaLimit>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="QuotaLimit" /> class.
        /// </summary>
        /// <param name="hash">hash.</param>
        /// <param name="region">region.</param>
        /// <param name="regionLimit">regionLimit.</param>
        public QuotaLimit(byte[] hash = default(byte[]), string region = default(string), Resources regionLimit = default(Resources))
        {
            this.Hash = hash;
            this.Region = region;
            this.RegionLimit = regionLimit;
        }

        /// <summary>
        /// Gets or Sets Hash
        /// </summary>
        [DataMember(Name = "Hash", EmitDefaultValue = false)]
        public byte[] Hash { get; set; }

        /// <summary>
        /// Gets or Sets Region
        /// </summary>
        [DataMember(Name = "Region", EmitDefaultValue = false)]
        public string Region { get; set; }

        /// <summary>
        /// Gets or Sets RegionLimit
        /// </summary>
        [DataMember(Name = "RegionLimit", EmitDefaultValue = false)]
        public Resources RegionLimit { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class QuotaLimit {\n");
            sb.Append("  Hash: ").Append(Hash).Append("\n");
            sb.Append("  Region: ").Append(Region).Append("\n");
            sb.Append("  RegionLimit: ").Append(RegionLimit).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as QuotaLimit);
        }

        /// <summary>
        /// Returns true if QuotaLimit instances are equal
        /// </summary>
        /// <param name="input">Instance of QuotaLimit to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(QuotaLimit input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Hash == input.Hash ||
                    (this.Hash != null &&
                    this.Hash.Equals(input.Hash))
                ) && 
                (
                    this.Region == input.Region ||
                    (this.Region != null &&
                    this.Region.Equals(input.Region))
                ) && 
                (
                    this.RegionLimit == input.RegionLimit ||
                    (this.RegionLimit != null &&
                    this.RegionLimit.Equals(input.RegionLimit))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Hash != null)
                {
                    hashCode = (hashCode * 59) + this.Hash.GetHashCode();
                }
                if (this.Region != null)
                {
                    hashCode = (hashCode * 59) + this.Region.GetHashCode();
                }
                if (this.RegionLimit != null)
                {
                    hashCode = (hashCode * 59) + this.RegionLimit.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
