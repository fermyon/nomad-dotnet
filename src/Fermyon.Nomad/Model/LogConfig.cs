/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Fermyon.Nomad.Client.OpenAPIDateConverter;

namespace Fermyon.Nomad.Model
{
    /// <summary>
    /// LogConfig
    /// </summary>
    [DataContract(Name = "LogConfig")]
    public partial class LogConfig : IEquatable<LogConfig>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LogConfig" /> class.
        /// </summary>
        /// <param name="maxFileSizeMB">maxFileSizeMB.</param>
        /// <param name="maxFiles">maxFiles.</param>
        public LogConfig(int maxFileSizeMB = default(int), int maxFiles = default(int))
        {
            this.MaxFileSizeMB = maxFileSizeMB;
            this.MaxFiles = maxFiles;
        }

        /// <summary>
        /// Gets or Sets MaxFileSizeMB
        /// </summary>
        [DataMember(Name = "MaxFileSizeMB", EmitDefaultValue = false)]
        public int MaxFileSizeMB { get; set; }

        /// <summary>
        /// Gets or Sets MaxFiles
        /// </summary>
        [DataMember(Name = "MaxFiles", EmitDefaultValue = false)]
        public int MaxFiles { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LogConfig {\n");
            sb.Append("  MaxFileSizeMB: ").Append(MaxFileSizeMB).Append("\n");
            sb.Append("  MaxFiles: ").Append(MaxFiles).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LogConfig);
        }

        /// <summary>
        /// Returns true if LogConfig instances are equal
        /// </summary>
        /// <param name="input">Instance of LogConfig to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LogConfig input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.MaxFileSizeMB == input.MaxFileSizeMB ||
                    this.MaxFileSizeMB.Equals(input.MaxFileSizeMB)
                ) && 
                (
                    this.MaxFiles == input.MaxFiles ||
                    this.MaxFiles.Equals(input.MaxFiles)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.MaxFileSizeMB.GetHashCode();
                hashCode = (hashCode * 59) + this.MaxFiles.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
