/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Fermyon.Nomad.Model;
using Fermyon.Nomad.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Fermyon.Nomad.Test.Model
{
    /// <summary>
    ///  Class for testing SearchRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SearchRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SearchRequest
        //private SearchRequest instance;

        public SearchRequestTests()
        {
            // TODO uncomment below to create an instance of SearchRequest
            //instance = new SearchRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SearchRequest
        /// </summary>
        [Fact]
        public void SearchRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" SearchRequest
            //Assert.IsType<SearchRequest>(instance);
        }

        /// <summary>
        /// Test the property 'AllowStale'
        /// </summary>
        [Fact]
        public void AllowStaleTest()
        {
            // TODO unit test for the property 'AllowStale'
        }

        /// <summary>
        /// Test the property 'AuthToken'
        /// </summary>
        [Fact]
        public void AuthTokenTest()
        {
            // TODO unit test for the property 'AuthToken'
        }

        /// <summary>
        /// Test the property 'Context'
        /// </summary>
        [Fact]
        public void ContextTest()
        {
            // TODO unit test for the property 'Context'
        }

        /// <summary>
        /// Test the property 'Filter'
        /// </summary>
        [Fact]
        public void FilterTest()
        {
            // TODO unit test for the property 'Filter'
        }

        /// <summary>
        /// Test the property 'Headers'
        /// </summary>
        [Fact]
        public void HeadersTest()
        {
            // TODO unit test for the property 'Headers'
        }

        /// <summary>
        /// Test the property 'VarNamespace'
        /// </summary>
        [Fact]
        public void VarNamespaceTest()
        {
            // TODO unit test for the property 'VarNamespace'
        }

        /// <summary>
        /// Test the property 'NextToken'
        /// </summary>
        [Fact]
        public void NextTokenTest()
        {
            // TODO unit test for the property 'NextToken'
        }

        /// <summary>
        /// Test the property 'VarParams'
        /// </summary>
        [Fact]
        public void VarParamsTest()
        {
            // TODO unit test for the property 'VarParams'
        }

        /// <summary>
        /// Test the property 'PerPage'
        /// </summary>
        [Fact]
        public void PerPageTest()
        {
            // TODO unit test for the property 'PerPage'
        }

        /// <summary>
        /// Test the property 'Prefix'
        /// </summary>
        [Fact]
        public void PrefixTest()
        {
            // TODO unit test for the property 'Prefix'
        }

        /// <summary>
        /// Test the property 'Region'
        /// </summary>
        [Fact]
        public void RegionTest()
        {
            // TODO unit test for the property 'Region'
        }

        /// <summary>
        /// Test the property 'Reverse'
        /// </summary>
        [Fact]
        public void ReverseTest()
        {
            // TODO unit test for the property 'Reverse'
        }

        /// <summary>
        /// Test the property 'WaitIndex'
        /// </summary>
        [Fact]
        public void WaitIndexTest()
        {
            // TODO unit test for the property 'WaitIndex'
        }

        /// <summary>
        /// Test the property 'WaitTime'
        /// </summary>
        [Fact]
        public void WaitTimeTest()
        {
            // TODO unit test for the property 'WaitTime'
        }
    }
}
