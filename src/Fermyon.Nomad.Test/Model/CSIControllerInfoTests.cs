/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Fermyon.Nomad.Model;
using Fermyon.Nomad.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Fermyon.Nomad.Test.Model
{
    /// <summary>
    ///  Class for testing CSIControllerInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CSIControllerInfoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CSIControllerInfo
        //private CSIControllerInfo instance;

        public CSIControllerInfoTests()
        {
            // TODO uncomment below to create an instance of CSIControllerInfo
            //instance = new CSIControllerInfo();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CSIControllerInfo
        /// </summary>
        [Fact]
        public void CSIControllerInfoInstanceTest()
        {
            // TODO uncomment below to test "IsType" CSIControllerInfo
            //Assert.IsType<CSIControllerInfo>(instance);
        }

        /// <summary>
        /// Test the property 'SupportsAttachDetach'
        /// </summary>
        [Fact]
        public void SupportsAttachDetachTest()
        {
            // TODO unit test for the property 'SupportsAttachDetach'
        }

        /// <summary>
        /// Test the property 'SupportsClone'
        /// </summary>
        [Fact]
        public void SupportsCloneTest()
        {
            // TODO unit test for the property 'SupportsClone'
        }

        /// <summary>
        /// Test the property 'SupportsCondition'
        /// </summary>
        [Fact]
        public void SupportsConditionTest()
        {
            // TODO unit test for the property 'SupportsCondition'
        }

        /// <summary>
        /// Test the property 'SupportsCreateDelete'
        /// </summary>
        [Fact]
        public void SupportsCreateDeleteTest()
        {
            // TODO unit test for the property 'SupportsCreateDelete'
        }

        /// <summary>
        /// Test the property 'SupportsCreateDeleteSnapshot'
        /// </summary>
        [Fact]
        public void SupportsCreateDeleteSnapshotTest()
        {
            // TODO unit test for the property 'SupportsCreateDeleteSnapshot'
        }

        /// <summary>
        /// Test the property 'SupportsExpand'
        /// </summary>
        [Fact]
        public void SupportsExpandTest()
        {
            // TODO unit test for the property 'SupportsExpand'
        }

        /// <summary>
        /// Test the property 'SupportsGet'
        /// </summary>
        [Fact]
        public void SupportsGetTest()
        {
            // TODO unit test for the property 'SupportsGet'
        }

        /// <summary>
        /// Test the property 'SupportsGetCapacity'
        /// </summary>
        [Fact]
        public void SupportsGetCapacityTest()
        {
            // TODO unit test for the property 'SupportsGetCapacity'
        }

        /// <summary>
        /// Test the property 'SupportsListSnapshots'
        /// </summary>
        [Fact]
        public void SupportsListSnapshotsTest()
        {
            // TODO unit test for the property 'SupportsListSnapshots'
        }

        /// <summary>
        /// Test the property 'SupportsListVolumes'
        /// </summary>
        [Fact]
        public void SupportsListVolumesTest()
        {
            // TODO unit test for the property 'SupportsListVolumes'
        }

        /// <summary>
        /// Test the property 'SupportsListVolumesAttachedNodes'
        /// </summary>
        [Fact]
        public void SupportsListVolumesAttachedNodesTest()
        {
            // TODO unit test for the property 'SupportsListVolumesAttachedNodes'
        }

        /// <summary>
        /// Test the property 'SupportsReadOnlyAttach'
        /// </summary>
        [Fact]
        public void SupportsReadOnlyAttachTest()
        {
            // TODO unit test for the property 'SupportsReadOnlyAttach'
        }
    }
}
